# This file must be used with "source bin/activate" *from bash*
# you cannot run it directly

deactivate () {
    # reset old environment variables
    if [ -n "$_OLD_VIRTUAL_PATH" ] ; then
	PATH="$_OLD_VIRTUAL_PATH"
	export PATH
	unset _OLD_VIRTUAL_PATH
    fi
    if [ -n "$_OLD_VIRTUAL_PYTHONHOME" ] ; then
	PYTHONHOME="$_OLD_VIRTUAL_PYTHONHOME"
	export PYTHONHOME
	unset _OLD_VIRTUAL_PYTHONHOME
    fi
    if [ -n "$_OLD_VIRTUAL_C_INCLUDE_PATH" ] ; then
	C_INCLUDE_PATH="$_OLD_VIRTUAL_C_INCLUDE_PATH"
	export C_INCLUDE_PATH
	unset _OLD_VIRTUAL_C_INCLUDE_PATH
    fi
    if [ -n "$_OLD_VIRTUAL_LD_LIBRARY_PATH" ] ; then
	LD_LIBRARY_PATH="$_OLD_VIRTUAL_LD_LIBRARY_PATH"
	export LD_LIBRARY_PATH
	unset _OLD_VIRTUAL_LD_LIBRARY_PATH
    fi
    if [ -n "$_OLD_VIRTUAL_LIBRARY_PATH" ] ; then
	LIBRARY_PATH="$_OLD_VIRTUAL_LIBRARY_PATH"
	export LIBRARY_PATH
	unset _OLD_VIRTUAL_LIBRARY_PATH
    fi
    if [ -n "$_OLD_VIRTUAL_PKG_CONFIG_PATH" ] ; then
	PKG_CONFIG_PATH="$_OLD_VIRTUAL_PKG_CONFIG_PATH"
	export PKG_CONFIG_PATH
	unset _OLD_VIRTUAL_PKG_CONFIG_PATH
    fi

    # This should detect bash and zsh, which have a hash command that must
    # be called to get it to forget past commands.  Without forgetting
    # past commands the $PATH changes we made may not be respected
    if [ -n "$BASH" -o -n "$ZSH_VERSION" ] ; then
	hash -r
    fi

    if [ -n "$_OLD_VIRTUAL_PS1" ] ; then
	PS1="$_OLD_VIRTUAL_PS1"
	export PS1
	unset _OLD_VIRTUAL_PS1
    fi

    if [ ! "$1" = "nondestructive" ] ; then
	# Self destruct!
	unset VIRTUAL_ENV
	unset -f deactivate
    fi
}

# unset irrelavent variables
deactivate nondestructive
if [ -z ${VIRTUAL_ENV} ]; then
    VIRTUAL_ENV=$(dirname $(readlink -f ${BASH_SOURCE}))
fi
export VIRTUAL_ENV

_OLD_VIRTUAL_PKG_CONFIG_PATH="$PKG_CONFIG_PATH"
PKG_CONFIG_PATH="$VIRTUAL_ENV/lib/pkgconfig:$PKG_CONFIG_PATH"
export PKG_CONFIG_PATH

_OLD_VIRTUAL_C_INCLUDE_PATH="$C_INCLUDE_PATH"
C_INCLUDE_PATH="$VIRTUAL_ENV/include:$C_INCLUDE_PATH"
export C_INCLUDE_PATH

_OLD_VIRTUAL_LIBRARY_PATH="$LIBRARY_PATH"
LIBRARY_PATH="$VIRTUAL_ENV/lib:$LIBRARY_PATH"
export LIBRARY_PATH

_OLD_VIRTUAL_LD_LIBRARY_PATH="$LD_LIBRARY_PATH"
LD_LIBRARY_PATH="$VIRTUAL_ENV/lib:$LD_LIBRARY_PATH"
export LD_LIBRARY_PATH

_OLD_VIRTUAL_PATH="$PATH"
PATH="$VIRTUAL_ENV/bin:$VIRTUAL_ENV/sbin:$PATH"
export PATH

# unset PYTHONHOME if set
# this will fail if PYTHONHOME is set to the empty string (which is bad anyway)
# could use `if (set -u; : $PYTHONHOME) ;` in bash
if [ -n "$PYTHONHOME" ] ; then
    _OLD_VIRTUAL_PYTHONHOME="$PYTHONHOME"
    unset PYTHONHOME
fi

if [ -z "$VIRTUAL_ENV_DISABLE_PROMPT" ] ; then
    _OLD_VIRTUAL_PS1="$PS1"
    if [ "x" != x ] ; then
	PS1="$PS1"
    else
	if [ "`basename \"$VIRTUAL_ENV\"`" = "__" ] ; then
	    # special case for Aspen magic directories
	    # see http://www.zetadev.com/software/aspen/
	    PS1="[`basename \`dirname \"$VIRTUAL_ENV\"\``] $PS1"
	else
	    PS1="(`basename \"$VIRTUAL_ENV\"`)-$PS1"
	fi
    fi
    export PS1
fi

# This should detect bash and zsh, which have a hash command that must
# be called to get it to forget past commands.  Without forgetting
# past commands the $PATH changes we made may not be respected
if [ -n "$BASH" -o -n "$ZSH_VERSION" ] ; then
    hash -r
fi
